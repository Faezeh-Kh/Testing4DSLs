generate exhaustive mutants
in "data/out/"
from "data/model/"
metamodel "/org.imt.tdl.PSSMMutation/data/model/statemachines.ecore"

with blocks {
	ccs "Creates a connected state" {
		randomState = select one State 
		newState = create State with {name = random-string(1, 4), ^container = randomState->^container}
		create Transition with {^source = randomState, ^target = newState}
	}
	ccfs "Creates a connected final state "{
		randomState = select one State where {self not typed FinalState}
		fs = create FinalState with {name = random-string(1, 4), ^container = randomState->^container}
		create Transition with {^source = randomState, ^target = fs}
	}
	ctr "Creates a transition with random source and target states"{
		randomState1 = select one State where {self not typed FinalState and self not typed Pseudostate}
		randomState2 = select one State where {self not typed FinalState and self not typed Pseudostate}
		create Transition with {name = random-string(1, 4), ^source = randomState1, ^target = randomState2}
	}
	ctr2 "Creates a transition with source but without target state"{
		randomState = select one State where {self not typed FinalState}
		create Transition with {name = random-string(1, 4), ^source = randomState}
	}
	rtr "Removes a transition"{
		remove one Transition
	} 
	dtr "Duplicates a transition"{
		tr = select one Transition
		create Transition with {
			^container = tr->^container, ^source = tr->^source, ^target = tr->^target, 
			triggers = tr->triggers, effect = tr->effect, constraint = tr->constraint
		}
	}
	rst "Removes a state and adjacent transitions"{
		remove one State
		remove all Transition where {^source = null}
		remove all Transition where {^target = null}
	}
	cis "Changes the initial state to a different one"{
		initial1 = select one Pseudostate
		initial2 = select one Pseudostate where {self <> initial1}
		transition = select one Transition where {^source = initial1}
		modify transition with {^source = initial2}
	}
	cfs "Changes the final state to a different one"{
		final1 = select one FinalState
		final2 = select one FinalState where {self <> final1}
		transition = select one Transition where {^target = final1}
		modify transition with {^target = final2}
	}
	cst "Changes the source state of a transition"{
		transition = select one Transition
		state = select one State where {self <> transition->^source}
		modify transition with {^source = state}
	}
	rts "Changes the target state of a transition"{
		transition = select one Transition
		state = select one State where {self <> transition->^target}
		modify transition with {^target = state}
	}
	sdt "Swaps the direction of a transition"{
		modify one Transition with {swapref(^source, ^target)}
	}
	rev "Removes an event"{
		remove one Trigger
	}
	cev "Creates an event and set it to a transition"{	
		signalEventType = create SignalEventType with {signal = one Signal}
		event = create Trigger with {name = random-string(1, 4), eventType = signalEventType}
		modify one Transition with {triggers = event}
	}
	cet "Changes the event of a transition"{
		event = select one Trigger
		transition = select one Transition where {triggers <> event}
		modify transition with {triggers = event}
	}
	rac "Removes an action"{
		remove one Behavior
	}
	cac "Creates an action and set it to a transition"{
		action = create Behavior with {name = random-string(1, 4)}
		modify one Transition with {effect = action}
	}
	cat "Changes the action of a transition"{ 
		action = select one Behavior
		transition = select one Transition where {effect <> action}
		modify transition with {effect = action}
	}
	cas "Creates an action and set it to a state"{
		action = create Behavior with {name = random-string(1, 4)}
		modify one State where {self not typed FinalState and self not typed Pseudostate} with {entry = action}
	}
	rco "Removes a constraint"{
		remove one Constraint
	}
}