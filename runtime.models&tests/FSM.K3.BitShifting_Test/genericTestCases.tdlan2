Package genericTestCases {
	Import all from common ;
	Import all from K3fsmSpecificEvents ;
	Import all from testConfiguration ;
	
	Import all from k3fsmSpecificTypes;
	
	ModelState newState (fsmState = ?);
	
	StateMachine fsmNewState(
		currentState = *,
		unprocessedString = *,
		consumedString = *,
		producedString = *
	);
	State S0 (
		_name = "S0"
	);
	State S2 (
		_name = "S2"
	);
	Test Description bitShiftingGenericTest1 uses configuration genericConfiguration{
		tester.genericTestGate sends runModel to fsm.genericMUTGate;
	}
	Test Description bitShiftingGenericTest2 uses configuration genericConfiguration{
		tester.genericTestGate sends fsmNewState(
			currentState = S0, 
			unprocessedString = "000101010")) 
			to fsm.genericMUTGate;
		tester.genericTestGate sends runModel to fsm.genericMUTGate;
		tester.genericTestGate sends getModelState to fsm.genericMUTGate;
		//Assertion
		fsm.genericMUTGate sends fsmNewState (
			currentState = S2, 
			unprocessedString = "", 
			consumedString = "000101010", 
			producedString = "000010101")) 
			to tester.genericTestGate;
		set verdict to PASS;
	}
}