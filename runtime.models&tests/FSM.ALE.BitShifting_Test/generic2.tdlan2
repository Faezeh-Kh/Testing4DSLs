Package testDesignPackage_template {
	Import all from common ;
	Import all from fsmSpecificTypes;
	Import all from testConfiguration ;
	
	StateMachine stateMachineNewState(
		currentState = *,
		unprocessedString = *,
		consumedString = *,
		producedString = *
	);
	StateMachine givenSMState(
		currentState = S0,
		unprocessedString = "000101010"
	);
	StateMachine expectedSMState(
		currentState = S2, 
		unprocessedString = "", 
		consumedString = "000101010", 
		producedString = "000010101"
	);
	
	State S0 (
		_name = "S0"
	);
	State S2 (
		_name = "S2"
	);
	Test Description bitShiftingGenericTest1 uses configuration genericConfiguration{
		tester.genericTestGate sends givenSMState to fsm.genericMUTGate;
		tester.genericTestGate sends runModel to fsm.genericMUTGate;
		tester.genericTestGate sends getModelState to fsm.genericMUTGate;
		//Assertion
		fsm.genericMUTGate sends expectedSMState to tester.genericTestGate;
		set verdict to PASS;
	}
}