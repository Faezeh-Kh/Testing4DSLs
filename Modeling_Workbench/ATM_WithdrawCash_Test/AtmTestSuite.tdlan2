Package ATMTestSuite {
	Import all from common ;
	Import all from xPSSMEvents;
	Import all from testConfiguration ;
	Import all from testData ;
	
	Test Description test_wrongPin uses configuration xPSSMConfiguration{
		tester.reactiveGate sends _run (state_machine = ATM) to reactivepssm.reactiveGate;
		reactivepssm.reactiveGate sends behavior_executed (behavior = insertCardMsg) to tester.reactiveGate;
		tester.reactiveGate sends signal_received (
			state_machine = ATM, 
			signal_occurrence = card_occurrence (
				signal = Card,
				attributeValues = {cardPinValue (value = "1234"), cardBalanceValue (value = "1000")})
		) to reactivepssm.reactiveGate;
		reactivepssm.reactiveGate sends behavior_executed (behavior = enterPinMsg) to tester.reactiveGate;
		tester.reactiveGate sends signal_received (
			state_machine = ATM, 
			signal_occurrence = pin_occurrence (
				signal = Pin,
				attributeValues = enteredPinValue (value = "2222"))
		) to reactivepssm.reactiveGate;
		reactivepssm.reactiveGate sends behavior_executed (behavior = wrongPinMsg) to tester.reactiveGate;
	}
	
//	Test Description test_successfulWithdraw uses configuration xPSSMConfiguration{
//		tester.reactiveGate sends _run (state_machine = ATM) to reactivepssm.reactiveGate;
//		reactivepssm.reactiveGate sends behavior_executed (behavior = insertCardMsg) to tester.reactiveGate;
//		tester.reactiveGate sends signal_received (
//			state_machine = ATM, 
//			signal_occurrence = signal_occurrence (
//				signal = Card,
//				attributeValues = {cardPinValue (value = "1234"), cardBalanceValue (value = "1000")})
//		) to reactivepssm.reactiveGate;
//		reactivepssm.reactiveGate sends behavior_executed (behavior = enterPinMsg) to tester.reactiveGate;
//		tester.reactiveGate sends signal_received (
//			state_machine = ATM, 
//			signal_occurrence = signal_occurrence (
//				signal = Pin,
//				attributeValues = {enteredPinValue (value = "1234")})
//		) to reactivepssm.reactiveGate;
//		reactivepssm.reactiveGate sends behavior_executed (behavior = enterAmountMsg) to tester.reactiveGate;
//		tester.reactiveGate sends signal_received (
//			state_machine = ATM, 
//			signal_occurrence = signal_occurrence (
//				signal = Amount,
//				attributeValues = {enteredAmountValue (value = "500")})
//		) to reactivepssm.reactiveGate;
//		reactivepssm.reactiveGate sends behavior_executed (behavior = updateCardBalance) to tester.reactiveGate;
//		reactivepssm.reactiveGate sends behavior_executed (behavior = deliverCash) to tester.reactiveGate;
//	}
//	
//	Test Description test_wrongAmount uses configuration xPSSMConfiguration{
//		tester.reactiveGate sends _run (state_machine = ATM) to reactivepssm.reactiveGate;
//		reactivepssm.reactiveGate sends behavior_executed (behavior = insertCardMsg) to tester.reactiveGate;
//		tester.reactiveGate sends signal_received (
//			state_machine = ATM, 
//			signal_occurrence = signal_occurrence (
//				signal = Card,
//				attributeValues = {cardPinValue (value = "1234"), cardBalanceValue (value = "1000")})
//		) to reactivepssm.reactiveGate;
//		reactivepssm.reactiveGate sends behavior_executed (behavior = enterPinMsg) to tester.reactiveGate;
//		tester.reactiveGate sends signal_received (
//			state_machine = ATM, 
//			signal_occurrence = signal_occurrence (
//				signal = Pin,
//				attributeValues = {enteredPinValue (value = "1234")})
//		) to reactivepssm.reactiveGate;
//		reactivepssm.reactiveGate sends behavior_executed (behavior = enterAmountMsg) to tester.reactiveGate;
//		tester.reactiveGate sends signal_received (
//			state_machine = ATM, 
//			signal_occurrence = signal_occurrence (
//				signal = Amount,
//				attributeValues = {enteredAmountValue (value = "1500")})
//		) to reactivepssm.reactiveGate;
//		reactivepssm.reactiveGate sends behavior_executed (behavior = notEnoughMoneyMsg) to tester.reactiveGate;
//	}
}