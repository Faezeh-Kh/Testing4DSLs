Package miniJavaSpecificTypes {
	Type Program (
		_name of type EString,
		imports of type Imports with {
			containment;
		} ,
		classes of type TypeDeclarations with {
			containment;
		} ,
		state of type State with {
			dynamic;
		}
	) ;
	Type _Import (
		importedNamespace of type EString
	);
	Type TypeDeclaration extends NamedElement (
		accessLevel of type AccessLevel,
		implements of type Interfaces ,
		members of type Members with {
			containment;
		}
	) ;
	Type Class extends NamedElement, extends TypeDeclaration (
		abstract of type EBoolean ,
		superClass of type Class
	);
	Type Interface extends NamedElement, extends TypeDeclaration ( );
	Type Member extends NamedElement, extends TypedDeclaration (
		access of type AccessLevel
	);
	Type Method extends NamedElement, extends TypedDeclaration , extends Member (
		abstract of type EBoolean ,
		static of type EBoolean ,
		params of type Parameters with {
			containment;
		} ,
		body of type Block with {
			containment;
		}
	) ;
	Type Parameter extends NamedElement, extends TypedDeclaration , extends Symbol ( );
	Type Field extends NamedElement, extends TypedDeclaration , extends Member (
		defaultValue of type Expression with {
			containment;
		}
	) ;
	AccessLevel PRIVATE;
	AccessLevel PROTECTED;
	AccessLevel PUBLIC;
	Type AccessLevel;
	Type Block extends Statement (
		statements of type Statements with {
			containment;
		}
	) ;
	Type Statement ( );
	Type PrintStatement extends Statement (
		expression of type Expression with {
			containment;
		}
	) ;
	Type Return extends Statement (
		expression of type Expression with {
			containment;
		}
	) ;
	Type IfStatement extends Statement (
		expression of type Expression with {
			containment;
		},
		thenBlock of type Block with {
			containment;
		} ,
		elseBlock of type Block with {
			containment;
		}
	) ;
	Type WhileStatement extends Statement (
		condition of type Expression with {
			containment;
		},
		block of type Block with {
			containment;
		}
	) ;
	Type ForStatement extends Statement (
		declaration of type Assignment with {
			containment;
		},
		condition of type Expression with {
			containment;
		} ,
		progression of type Assignment with {
			containment;
		} ,
		block of type Block with {
			containment;
		}
	) ;
	Type TypeRef ( );
	Type SingleTypeRef extends TypeRef ( );
	Type ClassRef extends TypeRef, extends SingleTypeRef (
		referencedClass of type TypeDeclaration
	);
	Type NamedElement (
		_name of type EString
	);
	Type TypedDeclaration extends NamedElement (
		typeRef of type TypeRef with {
			containment;
		}
	) ;
	Type Symbol extends NamedElement, extends TypedDeclaration ( );
	Type VariableDeclaration extends NamedElement, extends TypedDeclaration , extends Symbol , extends Assignee ( );
	Type Assignment extends Statement (
		assignee of type Assignee with {
			containment;
		},
		_value of type Expression with {
			containment;
		}
	) ;
	Type Assignee ( );
	Type Expression extends Statement, extends Assignee ( );
	Type ArrayTypeRef extends TypeRef (
		typeRef of type SingleTypeRef with {
			containment;
		}
	) ;
	Type IntegerTypeRef extends TypeRef, extends SingleTypeRef ( );
	Type BooleanTypeRef extends TypeRef, extends SingleTypeRef ( );
	Type StringTypeRef extends TypeRef, extends SingleTypeRef ( );
	Type VoidTypeRef extends TypeRef, extends SingleTypeRef ( );
	Type Or extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type And extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type Equality extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type Inequality extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type SuperiorOrEqual extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type InferiorOrEqual extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type Superior extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type Inferior extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type Plus extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type Minus extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type Multiplication extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type Division extends Statement, extends Assignee , extends Expression (
		left of type Expression with {
			containment;
		} ,
		right of type Expression with {
			containment;
		}
	) ;
	Type ArrayAccess extends Statement, extends Assignee , extends Expression (
		object of type Expression with {
			containment;
		} ,
		index of type Expression with {
			containment;
		}
	) ;
	Type ArrayLength extends Statement, extends Assignee , extends Expression (
		array of type Expression with {
			containment;
		}
	) ;
	Type Not extends Statement, extends Assignee , extends Expression (
		expression of type Expression with {
			containment;
		}
	) ;
	Type Neg extends Statement, extends Assignee , extends Expression (
		expression of type Expression with {
			containment;
		}
	) ;
	Type FieldAccess extends Statement, extends Assignee , extends Expression (
		receiver of type Expression with {
			containment;
		} ,
		field of type Field
	) ;
	Type MethodCall extends Statement, extends Assignee , extends Expression (
		receiver of type Expression with {
			containment;
		} ,
		method of type Method ,
		args of type Expressions with {
			containment;
		}
	) ;
	Type StringConstant extends Statement, extends Assignee , extends Expression (
		_value of type EString
	);
	Type IntConstant extends Statement, extends Assignee , extends Expression (
		_value of type EInt
	);
	Type BoolConstant extends Statement, extends Assignee , extends Expression (
		_value of type EString
	);
	Type This extends Statement, extends Assignee , extends Expression ( );
	Type Super extends Statement, extends Assignee , extends Expression ( );
	Type Null extends Statement, extends Assignee , extends Expression ( );
	Type NewObject extends Statement, extends Assignee , extends Expression (
		_type of type Class ,
		args of type Expressions with {
			containment;
		}
	) ;
	Type NewArray extends Statement, extends Assignee , extends Expression (
		_type of type TypeRef with {
			containment;
		} ,
		_size of type Expression with {
			containment;
		}
	) ;
	Type SymbolRef extends Statement, extends Assignee , extends Expression (
		symbol of type Symbol
	);
	Type Context (
		_bindings of type SymbolBindings with {
			containment;
		},
		parentContext of type Context ,
		childContext of type Context with {
			containment;
		}
	) with {
		dynamic ;
	} ;
	Annotation dynamic;
	Type Value ( ) with {
		dynamic;
	} ;
	Type IntegerValue extends Value (
		_value of type EInt
	) with {
		dynamic;
	} ;
	Type SymbolBinding (
		_value of type Value with {
			containment;
		},
		symbol of type Symbol
	) with {
		dynamic ;
	} ;
	Type FieldBinding (
		field of type Field,
		_value of type Value with {
			containment;
		}
	) with {
		dynamic ;
	} ;
	Type StringValue extends Value (
		_value of type EString
	) with {
		dynamic;
	} ;
	Type BooleanValue extends Value (
		_value of type EBoolean
	) with {
		dynamic;
	} ;
	Type OutputStream (
		stream of type EString
	) with {
		dynamic;
	} ;
	Type State (
		rootFrame of type Frame with {
			containment;
		},
		objectsHeap of type ObjectInstances with {
			containment;
		} ,
		outputStream of type OutputStream with {
			containment;
		} ,
		arraysHeap of type ArrayInstances with {
			containment;
		}
	) with {
		dynamic ;
	} ;
	Type Frame (
		call of type Call with {
			containment;
		},
		_instance of type ObjectInstance ,
		childFrame of type Frame with {
			containment;
		} ,
		parentFrame of type Frame ,
		rootContext of type Context with {
			containment;
		} ,
		returnValue of type Value with {
			containment;
		}
	) with {
		dynamic ;
	} ;
	Type NullValue extends Value ( ) with {
		dynamic;
	} ;
	Type Call ( ) with {
		dynamic;
	} ;
	Type NewCall extends Call (
		_new of type NewObject
	) with {
		dynamic;
	} ;
	Type MethodCall2 extends Call (
		methodcall of type MethodCall
	) with {
		dynamic;
	} ;
	Type ObjectInstance (
		fieldbindings of type FieldBindings with {
			containment;
		},
		_type of type Class
	) with {
		dynamic ;
	} ;
	Type ArrayInstance (
		_value of type Values with {
			containment;
		},
		_size of type EInt
	) with {
		dynamic ;
	} ;
	Type ObjectRefValue extends Value (
		_instance of type ObjectInstance
	) with {
		dynamic;
	} ;
	Type ArrayRefValue extends Value (
		_instance of type ArrayInstance
	) with {
		dynamic;
	} ;
	Type EObject;
	Type EBigDecimal;
	Type EBigInteger;
	Type EBoolean;
	Type EBooleanObject;
	Type EByte;
	Type EByteArray;
	Type EByteObject;
	Type EChar;
	Type ECharacterObject;
	Type EDate;
	Type EDiagnosticChain;
	Type EDouble;
	Type EDoubleObject;
	Type EEList;
	Type EEnumerator;
	Type EFeatureMap;
	Type EFeatureMapEntry;
	Type EFloat;
	Type EFloatObject;
	Type EInt;
	Type EIntegerObject;
	Type EJavaClass;
	Type EJavaObject;
	Type ELong;
	Type ELongObject;
	Type EMap;
	Type EResource;
	Type EResourceSet;
	Type EShort;
	Type EShortObject;
	Type EString;
	Type ETreeIterator;
	Type EInvocationTargetException;
	Annotation containment;
	Collection Expressions of type Expression;
	Collection ObjectInstances of type ObjectInstance;
	Collection ArrayInstances of type ArrayInstance;
	Collection Imports of type _Import;
	Collection TypeDeclarations of type TypeDeclaration;
	Collection Interfaces of type Interface;
	Collection Members of type Member;
	Collection Statements of type Statement;
	Collection Parameters of type Parameter;
	Collection Values of type Value;
	Collection SymbolBindings of type SymbolBinding;
	Collection FieldBindings of type FieldBinding;
}